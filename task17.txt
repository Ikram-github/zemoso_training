syedk@IKRAM-IDEAPAD3 MINGW64 ~/Desktop/git_kata_repo (master)
$ echo "foo ">foo.s

syedk@IKRAM-IDEAPAD3 MINGW64 ~/Desktop/git_kata_repo (master)
$ vim .gitignore

syedk@IKRAM-IDEAPAD3 MINGW64 ~/Desktop/git_kata_repo (master)
$ ls
bar.txt  change.txt  file1.txt  foo.s         hello.txt
bug.txt  file.txt    file2.txt  greeting.txt

syedk@IKRAM-IDEAPAD3 MINGW64 ~/Desktop/git_kata_repo (master)
$ ls -R
.:
bar.txt  change.txt  file1.txt  foo.s         hello.txt
bug.txt  file.txt    file2.txt  greeting.txt

syedk@IKRAM-IDEAPAD3 MINGW64 ~/Desktop/git_kata_repo (master)
$ ls -la
total 22
drwxr-xr-x 1 syedk 197609  0 Jan 13 11:01 ./
drwxr-xr-x 1 syedk 197609  0 Jan 13 10:58 ../
drwxr-xr-x 1 syedk 197609  0 Jan 13 10:53 .git/
-rw-r--r-- 1 syedk 197609  5 Jan 13 11:01 .gitignore
-rw-r--r-- 1 syedk 197609  7 Jan 13 10:36 bar.txt
-rw-r--r-- 1 syedk 197609 16 Jan 13 10:50 bug.txt
-rw-r--r-- 1 syedk 197609  3 Jan 13 10:53 change.txt
-rw-r--r-- 1 syedk 197609  3 Jan 13 10:53 file.txt
-rw-r--r-- 1 syedk 197609  7 Jan 13 10:36 file1.txt
-rw-r--r-- 1 syedk 197609 16 Jan 13 10:03 file2.txt
-rw-r--r-- 1 syedk 197609  5 Jan 13 11:00 foo.s
-rw-r--r-- 1 syedk 197609 22 Jan 13 10:36 greeting.txt
-rw-r--r-- 1 syedk 197609 12 Jan 13 09:22 hello.txt

syedk@IKRAM-IDEAPAD3 MINGW64 ~/Desktop/git_kata_repo (master)
$ git status
On branch master
Untracked files:
  (use "git add <file>..." to include in what will be committed)
        .gitignore

nothing added to commit but untracked files present (use "git add" to track)

syedk@IKRAM-IDEAPAD3 MINGW64 ~/Desktop/git_kata_repo (master)
$ git add .gitignore
warning: LF will be replaced by CRLF in .gitignore.
The file will have its original line endings in your working directory

syedk@IKRAM-IDEAPAD3 MINGW64 ~/Desktop/git_kata_repo (master)
$ git commit -m "ignore file"
[master 3a4eafa] ignore file
 1 file changed, 2 insertions(+)
 create mode 100644 .gitignore

syedk@IKRAM-IDEAPAD3 MINGW64 ~/Desktop/git_kata_repo (master)
$ git status
On branch master
nothing to commit, working tree clean

syedk@IKRAM-IDEAPAD3 MINGW64 ~/Desktop/git_kata_repo (master)
$ vim .gitignore

syedk@IKRAM-IDEAPAD3 MINGW64 ~/Desktop/git_kata_repo (master)
$ echo "hello 1234">file1.txt

syedk@IKRAM-IDEAPAD3 MINGW64 ~/Desktop/git_kata_repo (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   .gitignore
        modified:   file1.txt

no changes added to commit (use "git add" and/or "git commit -a")

syedk@IKRAM-IDEAPAD3 MINGW64 ~/Desktop/git_kata_repo (master)
$ vim .gitignore

syedk@IKRAM-IDEAPAD3 MINGW64 ~/Desktop/git_kata_repo (master)
$ echo "123332323">file3.txt

syedk@IKRAM-IDEAPAD3 MINGW64 ~/Desktop/git_kata_repo (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   .gitignore
        modified:   file1.txt

no changes added to commit (use "git add" and/or "git commit -a")

syedk@IKRAM-IDEAPAD3 MINGW64 ~/Desktop/git_kata_repo (master)
$ git rm --cached
fatal: No pathspec was given. Which files should I remove?

syedk@IKRAM-IDEAPAD3 MINGW64 ~/Desktop/git_kata_repo (master)
$ git rm --cached file1.txt
rm 'file1.txt'

syedk@IKRAM-IDEAPAD3 MINGW64 ~/Desktop/git_kata_repo (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        deleted:    file1.txt

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   .gitignore


syedk@IKRAM-IDEAPAD3 MINGW64 ~/Desktop/git_kata_repo (master)
$ echo "alskasas">file4.txt

syedk@IKRAM-IDEAPAD3 MINGW64 ~/Desktop/git_kata_repo (master)
$ vim .gitignore

syedk@IKRAM-IDEAPAD3 MINGW64 ~/Desktop/git_kata_repo (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        deleted:    file1.txt

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   .gitignore

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        file4.txt

